// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int             @id @default(autoincrement())
  name          String
  email         String
  password      String
  about         String
  address       String
  created_at    DateTime        @default(now())
  updated_at    DateTime?
  userRating    UserRating[]
  request       Request[]
  RequestMentor RequestMentor[]

  @@map("users")
}

model UserRating {
  id      Int     @id @default(autoincrement())
  user_id Int
  rating  Decimal
  user    User    @relation(fields: [user_id], references: [id])

  @@map("user_ratings")
}

model Request {
  id           Int           @id @default(autoincrement())
  user_id      Int
  request_type RequestType
  title        String
  description  String
  date_time    DateTime
  reward       Int
  status       RequestStatus @default(NEW)
  created_at   DateTime      @default(now())
  updated_at   DateTime?
  user         User          @relation(fields: [user_id], references: [id])

  @@map("requests")
}

model RequestMentor {
  id         Int                  @id @default(autoincrement())
  mentor_id  Int
  rating     Int
  comment    String
  status     RequestMentorsStatus @default(WAITING)
  reward     Int?
  created_at DateTime             @default(now())
  updated_at DateTime?
  user       User                 @relation(fields: [mentor_id], references: [id])

  @@map("request_mentors")
}

model Category {
  id   Int    @id @default(autoincrement())
  name String @unique
}

enum RequestStatus {
  NEW
  VERIFIED
}

enum RequestMentorsStatus {
  WAITING
  ON_PROCESS
  DONE
}

enum RequestType {
  ONLINE
  OFFLINE
}
